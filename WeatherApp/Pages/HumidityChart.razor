@using ChartJs.Blazor.ChartJS.LineChart
@using ChartJs.Blazor.Util
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.ChartJS.Common.Time
@using ChartJs.Blazor.ChartJS.Common.Handlers
@using ChartJs.Blazor.ChartJS.Common.Enums
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes.Ticks
@using ChartJs.Blazor.Charts
@using WeatherApp.Common.Models
@using WeatherApp.Data

@inject WeatherDataList WeatherDataList

<div class="line_chart"> 
    <ChartJsLineChart @ref="_lineChartJs" Config="@_config" Width="50" Height="20" />
</div>

@code{
    LineDataset<TimeTuple<int>> WeatherDataset;
    LineConfig _config;
    ChartJsLineChart _lineChartJs;
    List<WeatherModel> _humidityList;

    protected override async Task OnInitializedAsync()
    {
        _humidityList = WeatherDataList.WeatherModels;
        _config = new LineConfig
        {
            Options = new LineOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true
                },
                Legend = new Legend
                {
                    Labels =
                    {
                        BoxWidth = 4,
                        UsePointStyle = true
                    },
                    Display = true
                },
                Tooltips = new Tooltips
                {
                    Mode = InteractionMode.Nearest,
                    Intersect = false
                },
                Scales = new Scales
                {
                    yAxes = new List<CartesianAxis>
                    {
                        new LinearCartesianAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Vlhkosť [%]"
                            }
                        }
                    },
                    xAxes = new List<CartesianAxis>
                    {
                        new TimeAxis
                        {
                            Distribution = TimeDistribution.Linear,
                            Ticks = new TimeTicks
                            {
                                Source = TickSource.Data
                            },
                            Time = new TimeOptions
                            {
                                Unit = TimeMeasurement.Hour,
                                Round = TimeMeasurement.Hour,
                                TooltipFormat = "DD.MM.YYYY HH:mm:ss:SSS",
                                DisplayFormats = TimeDisplayFormats.DE_CH
                            },
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Čas"
                            }
                        }
                    }
                }
            }
        };

        WeatherDataset = new LineDataset<TimeTuple<int>>
        {
            BackgroundColor = ColorUtil.FromDrawingColor(System.Drawing.Color.White),
            BorderColor = ColorUtil.FromDrawingColor(System.Drawing.Color.Blue),
            Label = "Vlhkosť",
            Fill = false,
            BorderWidth = 2,
            PointRadius = 2,
            PointBorderWidth = 2,
            SteppedLine = SteppedLine.False,
            Hidden = false
        };
        
        WeatherDataset.AddRange(_humidityList.Select
            (_ => new TimeTuple<int>(new Moment(_.Date), System.Convert.ToInt32(Math.Ceiling(_.Humidity)))));
        _config.Data.Datasets.Add(WeatherDataset);
    }

}
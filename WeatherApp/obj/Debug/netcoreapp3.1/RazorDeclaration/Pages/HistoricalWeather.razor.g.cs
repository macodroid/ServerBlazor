#pragma checksum "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9c0b3c7232c4bd38dc5fc86db09ccac30f13e747"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace WeatherApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using WeatherApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using WeatherApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\_Imports.razor"
using ChartJs.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using WeatherApp.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using WeatherApp.Common.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using Interfaces.WeatherDataAccessLibrary;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.ChartJS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.ChartJS.Common.Properties;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.ChartJS.Common.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.ChartJS.Common.Axes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.ChartJS.Common.Axes.Ticks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.ChartJS.Common.Handlers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.ChartJS.Common.Time;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.ChartJS.LineChart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
using ChartJs.Blazor.Util;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/historicalWeather")]
    public partial class HistoricalWeather : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 74 "C:\Users\macko\Documents\Project\BlazorServer\WeatherApp\Pages\HistoricalWeather.razor"
 
    private List<Weather> _historicalData ;
    private DateFilter _dateFilter = new DateFilter();
    private LineConfig _config;
    private ChartJsLineChart _lineChartJs;
    private LineDataset<TimeTuple<double>> _WeatherDataset;

    // protected override async Task OnInitializedAsync()
    // {
    //     _historicalData = await SqlQueries.GetAllWeatherData();
    // }

    private async Task DisplayHistoricalDataBetweenDates()
    {
       _historicalData = await SqlQueries.GetWeatherDataByDates(_dateFilter.FromDate, _dateFilter.ToDate);

         _config = new LineConfig()
         {
             Options = new LineOptions()
             {
                 Responsive = true,
                 Title = new OptionsTitle
                 {
                     Display = true,
                     Text = $"Historical Weather Data from {_dateFilter.FromDate.ToString("yyyy-MM-dd")} to {_dateFilter.ToDate.ToString("yyyy-MM-dd")} "
                 },
                 Legend = new Legend
                 {
                     Display = false
                 },
                 Tooltips = new Tooltips
                 {
                     Mode = InteractionMode.Nearest,
                     Intersect = false
                 },
                 Scales = new Scales
                 {
                     yAxes = new List<CartesianAxis>
                     {
                         new LinearCartesianAxis
                         {
                             ScaleLabel = new ScaleLabel
                             {
                                 LabelString = "Weight"
                             }
                         }
                     },
                     xAxes = new List<CartesianAxis>
                     {
                         new TimeAxis
                         {
                             Distribution = TimeDistribution.Linear,
                             Ticks = new TimeTicks
                             {
                                 Source = TickSource.Data
                             },
                             Time = new TimeOptions
                             {
                                 Unit = TimeMeasurement.Hour,
                                 Round = TimeMeasurement.Hour,
                                 TooltipFormat = "MM.DD.YYYY HH:MM",
                                 //DisplayFormats = TimeDisplayFormats.DE_CH
                             },
                             ScaleLabel = new ScaleLabel
                             {
                                 LabelString = "Date"
                             }
                         }
                     }
                 }
             }
         };
        
        var _WeatherDataset= new LineDataset<TimeTuple<double>>
        {
            BackgroundColor = ColorUtil.FromDrawingColor(System.Drawing.Color.White),
            BorderColor = ColorUtil.FromDrawingColor(System.Drawing.Color.Red),
            Label = "tempertarure",
            Fill = false,
            BorderWidth = 2,
            PointRadius = 2,
            PointBorderWidth = 2,
            SteppedLine = SteppedLine.False,
            Hidden = false
        };
        //var dateAndTime = _historicalData.Select(_ => _.Date + _.Local_Time);
        var chartData = _historicalData.Select(_ => new TimeTuple<double>(new Moment(_.Date), _.Temp));
        _WeatherDataset.AddRange(chartData);
        _config.Data.Datasets.Add(_WeatherDataset);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISqlQueries SqlQueries { get; set; }
    }
}
#pragma warning restore 1591
